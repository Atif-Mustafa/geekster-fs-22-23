11-12-2024
NodeJS ? => Environment
ReactJS -> Library
Chartjs, d3js etc

SPA(Single Page Application) => Only 1 html file

-------------------------------------------------------
12-12-2024
Prerequisites
1. Babel
2. NodeJS
3. Live Server
4. File loaders
5. Bundler (Webpack)

npm = node package manager

Boiler plate => Pre configured project setup
CRA (Create React App)
Vite
-----------------------------------------------
13-12-2024
CSS in React
1. Inline CSS
2. External CSS

Props = Properties

const sum = (num1, num2) => {
    return num1 + num2
};

sum(10,5);
sum(7,80);
-----------------------------------------------
16-12-2024
1. Listeners
2. State


Value is being updated properly - LOGIC IS PERFECT
UI is not updating - Rendering ISSUE
Update variable's value
Re-Rendering the UI
-----------------------------------------------
17-12-2024
States : setState

const names = ["a",{name: "", title: "", completed: false},"c","d","e"];
Q. Replace letter b with letter z with the help of splice method
const indexOfCharacterB = 1;
names.splice(start-index, items-to-delete, item-to-insert)
names.splice(1, 1, {
    ...names[1],
    completed: true
})

const arr = ["",""]
arr = [] // not allowed

Conditional Rendering : To show / hide something based on a condition
Lifting up the state : When child changes the state of the parent

-----------------------------------------------
19-12-2024
Types of components in React
1. Functional Components
2. Class based Components

-----------------------------------------------
20-12-2024
Hooks? => These are some functions in reactjs which handles the side effects.

Side effects => The operations other than updating UI which deals with internals (vitual dom, lifecycle etc - react core) of reactjs

useEffect(callback-fn,dependencies-array) => All 3 phases
Mounting phase => useEffect(callback-fn, [])
Updating phase => useErffect()
Unmounting phase => useEffect(callback-fn and retun a fn from callback-fn, [])

-----------------------------------------------
23-12-2024

GET => To get the data from the Server
POST => To send the data to the Server

HTTP Status Codes
1xx => Informational code
2xx => Sucess Codes
3xx => Redirectional Codes
4xx => Error codes (Client error)
5xx => Error codes (Server error)

-----------------------------------------------
24-12-2024
POST APIs
useRef()
useMemo()

Pre requisits to call an API

End Point : URL
Method : GET, POST etc
Headers: key-value pairs (eg. API Keys)
Body : Shape / Structure of the body

Every API request and response has 2 parts : Header & Body

-----------------------------------------------
26-12-2024

Hooks
useRef
memo
useCallback
useMemo

return -> useEffect

-----------------------------------------------
27-12-2024

memo => Memoization (Caching / Cache)

memo => Compares oldProps and newProps to decide whether to render or not
Allow re render => If the props passed to child changes
Prvent re render => If the props passed to child does not changes OR we did not passed any props

function re-creating => reference of the function is changing (probably be due to re rendering)

-----------------------------------------------
30-12-2024

Routing

Types
1. SSR Server Side Routing => When server loads your page for every route (Page refresh)
2. CSR Client Side Routing => When Client client loads your page for every route (No page refresh)

localhost:5713/contact-us

Home =>  /
AboutUs => /about-us
ContactUs => /contact-us

Conditon
1. Dont' use <a> insted use <Link>
2. Link is allowed only inside the <RouterProvider /> tree
3. I don't want to repeat the nav bar

-----------------------------------------------
31-12-2024

react-router-dom
1. Import methods and components
2. Create a browser router
3. Supply it to the RouterProvider


https://www.makemytrip.com/hotel/hotel-details/?hotelId=<hotel-id>
https://www.makemytrip.com/hotel/hotel-details/?hotelId=1
https://www.makemytrip.com/hotel/hotel-details/?hotelId=2
https://www.makemytrip.com/hotel/hotel-details/?hotelId=3

https://www.makemytrip.com/hotel/hotel-details/<hotel-id>
https://www.makemytrip.com/hotel/hotel-details/1
https://www.makemytrip.com/hotel/hotel-details/2
https://www.makemytrip.com/hotel/hotel-details/3


-----------------------------------------------
02-01-2025

useReducer()

Payload => New value / data etc

initData => state
reducerFn => disptach

Cart Assignment with useReducer()
const initData = {
    cart: [
        {
            pId: 1,
            name: "Galaxy S8",
            price: 399,
            qty: 1
        },
        {
            pId: 2,
            name: "Google Pixel",
            price: 259,
            qty: 1
        },
        {
            pId: 3,
            name: "Redmi Note 2",
            price: 99,
            qty: 1
        }
    ]
}

const reducerFn = (state, action) => {
    switch(action.type) {
        case "INCREASE_QTY":
            const cartCopy = [...state.cart];
            cartCopy.splice(indexToUpdate,1, {
                // Logic to update qty
            });
            return {
                ...state,
                cart: cartCopy
            }
        case "DECREASE_QTY":
        case "REMOVE_ITEM":
    }
};


const [state,dispcath] = useReducer(reducerFn, initData)